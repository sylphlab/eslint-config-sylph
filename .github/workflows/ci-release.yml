name: CI Release
description: |
  This workflow is triggered on push to the main branch and creates a release pull request or publishes to npm.
  It uses Changesets to handle versioning and changelogs.

permissions: # Add top-level permissions for changeset action
  contents: write
  pull-requests: write

on:
  push:
    branches:
      - main # Trigger on push to main branch
  # workflow_dispatch: # Allow manual trigger - Keep disabled for now unless needed
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create release commit/PR
      pull-requests: write # Needed to create release PR
      id-token: write # Needed for OIDC publishing

    outputs: # Define output to signal if docs should be deployed
      docs_built: ${{ steps.build_docs.outcome == 'success' }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          # Fetch depth 0 is required for changeset version to correctly determine changed packages
          fetch-depth: 0

      - name: Setup pnpm # Move pnpm setup before Node setup
        uses: pnpm/action-setup@v4
        # Removed version: latest to avoid conflict with packageManager field

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm' # pnpm/action-setup handles caching, this is correct

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile # Use pnpm install

      - name: Run Package Build
        run: pnpm run build # Use pnpm run

      - name: Build Documentation Site
        id: build_docs
        run: pnpm run docs:build # Use pnpm run

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called 'release' in your package.json
          # which runs 'changeset publish'. We need to update the 'release' script in package.json too.
          publish: pnpm run release # Use pnpm run
          # Optional: Use 'createGithubReleases: true' to create GitHub releases
          # Optional: Use 'commit: "chore: update versions"' to commit directly instead of PR
        env:
          # Explicitly pass the token with correct permissions
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }} # Still needed for the publish command within 'release' script
          # Use NPM_CONFIG_PROVENANCE=true for OIDC/provenance if not using JS-DevTools/npm-publish
          # NPM_CONFIG_PROVENANCE: "true"

  deploy-docs:
    name: Deploy Docs to GitHub Pages
    needs: release # Run after the release job
    if: github.ref == 'refs/heads/main' && needs.release.outputs.docs_built == 'true' # Only deploy on main push if docs built successfully
    runs-on: ubuntu-latest
    permissions:
      pages: write # Needed to deploy to GitHub Pages
      id-token: write # Needed for deployment authentication

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # URL provided by the deployment action

    steps:
      - name: Checkout repository # Need checkout again for deploy job
        uses: actions/checkout@v4

      # Need Node and pnpm setup again in this job
      - name: Setup pnpm # Move pnpm setup before Node setup
        uses: pnpm/action-setup@v4
        # Removed version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm' # pnpm/action-setup handles caching

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile # Use pnpm install

      - name: Build Documentation Site
        run: pnpm run docs:build # Use pnpm run

      - name: Setup Pages
        uses: actions/configure-pages@v5 # Pinned version

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # Pinned version
        with:
          # Astro builds to dist/ by default
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Pinned version
